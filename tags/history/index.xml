<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>History on taihen.org / 418 ... engineering in progress</title><link>https://taihen.org/tags/history/</link><description>Recent content in History on taihen.org / 418 ... engineering in progress</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 15 Mar 2025 11:25:36 +0100</lastBuildDate><atom:link href="https://taihen.org/tags/history/index.xml" rel="self" type="application/rss+xml"/><item><title>The Evolution of Configuration Management</title><link>https://taihen.org/posts/configuration_management/</link><pubDate>Tue, 07 Jan 2025 21:45:01 +0100</pubDate><guid>https://taihen.org/posts/configuration_management/</guid><description>&lt;blockquote>
&lt;p>This is part of series of articles about my perspective of 25 years in infrastructure engineering &lt;a href="https://taihen.org/tags/25years/">read more&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>Over my two decades as an infrastructure engineer, I&amp;rsquo;ve watched our field transform dramatically. What began with manual server configuration has evolved into defining entire organizations infrastructure as code. This journey reflects not just technological change, but a complete shift in how we approach managing systems at scale. I&amp;rsquo;ve been in the trenches through most of it, and I want to share my story of this evolution with fellow infrastructure engineers who&amp;rsquo;ve lived through similar transitions.&lt;/p></description></item><item><title>January 1, 1970</title><link>https://taihen.org/posts/1970/</link><pubDate>Mon, 01 Oct 2007 22:36:36 +0100</pubDate><guid>https://taihen.org/posts/1970/</guid><description>&lt;p>The Unix epoch, defined as 00:00:00 UTC on January 1, 1970, serves as the foundational reference point for timekeeping in nearly all modern computing systems. This date, though seemingly arbitrary, emerged from a confluence of technical constraints, historical decisions, and practical considerations during Unix&amp;rsquo;s early development.&lt;/p>
&lt;h3 id="historical-context-of-unix-time">Historical Context of Unix Time&lt;/h3>
&lt;h4 id="early-development-of-unix-and-timekeeping">Early Development of Unix and Timekeeping&lt;/h4>
&lt;p>Unix, initially developed at Bell Labs in 1969, required a consistent method to track time for file management and process scheduling. Early versions of Unix stored time as a 32-bit integer counting 1/60-second intervals, a design influenced by the hardware clock frequency of the PDP-11 systems. This approach limited the maximum representable time span to approximately 829 days (~2.5 years), necessitating an epoch set in the recent past.&lt;/p></description></item></channel></rss>